Terraform EKS Deployment

This repository provides Terraform code to deploy an Amazon EKS (Elastic Kubernetes Service) cluster on AWS. The setup follows a modular approach to manage the infrastructure efficiently.

Architecture Overview

Control Plane: Managed by AWS, including API Server, etcd, scheduler, and controller manager.

Cloud Controller Manager: Integrates Kubernetes with AWS infrastructure.

Worker Nodes: Deployed in an Auto Scaling Group, running containerized applications.

Networking: Uses AWS VPC, subnets, security groups, and load balancers for traffic management.

Application Deployment: Deploys containerized applications on the EKS cluster using Kubernetes manifests.

Prerequisites

Before deploying the infrastructure, ensure you have the following:

AWS CLI installed and configured with credentials.

Terraform installed (>= 1.0.0).

kubectl installed for managing Kubernetes resources.

An AWS IAM role with the necessary permissions to create EKS resources.

Docker installed to build and push container images.

Terraform Modules

This deployment uses the following Terraform modules:

VPC Module: Creates the required AWS VPC and subnets.

EKS Module: Deploys the EKS cluster and configures the control plane.

Node Group Module: Provisions worker nodes and auto-scaling groups.

IAM Module: Sets up IAM roles and policies for EKS and worker nodes.

Kubernetes Deployment Module: Manages Kubernetes deployments using Terraform.

Deployment Steps

1. Clone the Repository

git clone https://github.com/your-repo/terraform-eks.git
cd terraform-eks

2. Initialize Terraform

terraform init

3. Plan the Deployment

terraform plan

This command will show the resources that will be created.

4. Apply the Configuration

terraform apply -auto-approve

Terraform will provision the required AWS resources.

5. Configure kubectl

aws eks --region <your-region> update-kubeconfig --name <your-cluster-name>
kubectl get nodes

This command ensures that your cluster is running and accessible.

6. Deploy Applications

Once the EKS cluster is up, deploy applications using Kubernetes manifests:

kubectl apply -f k8s/deployment.yaml
kubectl apply -f k8s/service.yaml

To check running applications:

kubectl get pods -A
kubectl get services -A

Cleanup

To destroy all resources created by Terraform, run:

terraform destroy -auto-approve

Troubleshooting

Ensure AWS CLI is properly configured with valid credentials.

Check Terraform logs for errors during deployment.

Verify VPC and IAM role permissions if resources fail to create.

Ensure Kubernetes manifests are correctly structured.

References

AWS EKS Documentation

Terraform AWS Provider

Kubernetes Documentation

License

This project is licensed under the MIT License.

